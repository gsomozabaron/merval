<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>